!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!LdScript	assignment	/how a value is assigned to the symbol/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!LdScript	S,section	/sections/
!_TAG_KIND_DESCRIPTION!LdScript	i,inputSection	/input sections/
!_TAG_KIND_DESCRIPTION!LdScript	s,symbol	/symbols/
!_TAG_KIND_DESCRIPTION!LdScript	v,version	/versions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Perl	c,constant	/constants/
!_TAG_KIND_DESCRIPTION!Perl	f,format	/formats/
!_TAG_KIND_DESCRIPTION!Perl	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Perl	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Perl	s,subroutine	/subroutines/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!LdScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Perl	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/atin/osdev/myos/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Asm!section	placement	/placement where the assembled code goes/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	discarded	/discarded when linking/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	mapped	/mapped to output section/
!_TAG_ROLE_DESCRIPTION!LdScript!symbol	entrypoint	/entry points/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
ARCH_I386_VGA_H	arch/i386/vga.h	/^#define ARCH_I386_VGA_H$/;"	d
CHECKSUM	arch/i386/boot.asm	/^CHECKSUM equ  -(MAGIC + MBFLAGS)$/;"	d
EOF	include/stdio.h	/^#define EOF /;"	d
KERNEL_ARCH_OBJS	arch/i386/build.mk	/^KERNEL_ARCH_OBJS=\\$/;"	m
MAGIC	arch/i386/boot.asm	/^MAGIC    equ  0x1BADB002$/;"	d
MBALIGN	arch/i386/boot.asm	/^MBALIGN  equ  1 << 0$/;"	d
MBFLAGS	arch/i386/boot.asm	/^MBFLAGS  equ  MBALIGN | MEMINFO$/;"	d
MEMINFO	arch/i386/boot.asm	/^MEMINFO  equ  1 << 1$/;"	d
SETGATE	arch/i386/gdt.c	/^#define SETGATE(/;"	d	file:
STS_IG32	arch/i386/gdt.c	/^#define STS_IG32 /;"	d	file:
STS_TG32	arch/i386/gdt.c	/^#define STS_TG32 /;"	d	file:
VGA_COLOR_BLACK	arch/i386/vga.h	/^	VGA_COLOR_BLACK = 0,$/;"	e	enum:vga_color
VGA_COLOR_BLUE	arch/i386/vga.h	/^	VGA_COLOR_BLUE = 1,$/;"	e	enum:vga_color
VGA_COLOR_BROWN	arch/i386/vga.h	/^	VGA_COLOR_BROWN = 6,$/;"	e	enum:vga_color
VGA_COLOR_CYAN	arch/i386/vga.h	/^	VGA_COLOR_CYAN = 3,$/;"	e	enum:vga_color
VGA_COLOR_DARK_GREY	arch/i386/vga.h	/^	VGA_COLOR_DARK_GREY = 8,$/;"	e	enum:vga_color
VGA_COLOR_GREEN	arch/i386/vga.h	/^	VGA_COLOR_GREEN = 2,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_BLUE	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_BLUE = 9,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_BROWN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_BROWN = 14,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_CYAN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_CYAN = 11,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_GREEN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_GREEN = 10,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_GREY	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_GREY = 7,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_MAGENTA	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_MAGENTA = 13,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_RED	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_RED = 12,$/;"	e	enum:vga_color
VGA_COLOR_MAGENTA	arch/i386/vga.h	/^	VGA_COLOR_MAGENTA = 5,$/;"	e	enum:vga_color
VGA_COLOR_RED	arch/i386/vga.h	/^	VGA_COLOR_RED = 4,$/;"	e	enum:vga_color
VGA_COLOR_WHITE	arch/i386/vga.h	/^	VGA_COLOR_WHITE = 15,$/;"	e	enum:vga_color
VGA_HEIGHT	arch/i386/tty.c	/^static const size_t VGA_HEIGHT = 25;$/;"	v	typeref:typename:const size_t	file:
VGA_MEMORY	arch/i386/tty.c	/^static uint16_t* const VGA_MEMORY = (uint16_t*) 0xB8000;$/;"	v	typeref:typename:uint16_t * const	file:
VGA_WIDTH	arch/i386/tty.c	/^static const size_t VGA_WIDTH = 80;$/;"	v	typeref:typename:const size_t	file:
_ARCH_INT_H	include/arch/int.h	/^#define _ARCH_INT_H$/;"	d
_KERNEL_TTY_H	include/kernel/tty.h	/^#define _KERNEL_TTY_H$/;"	d
_STDIO_H	include/stdio.h	/^#define _STDIO_H /;"	d
_STDLIB_H	include/stdlib.h	/^#define _STDLIB_H /;"	d
_STRING_H	include/string.h	/^#define _STRING_H /;"	d
_SYS_CDEFS_H	include/sys/cdefs.h	/^#define _SYS_CDEFS_H /;"	d
__myos_libc	include/sys/cdefs.h	/^#define __myos_libc /;"	d
_start	arch/i386/boot.asm	/^_start:$/;"	l
abort	lib/stdlib/abort.c	/^void abort(void) {$/;"	f	typeref:typename:void
args	arch/i386/gdt.c	/^  unsigned int args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc	typeref:typename:unsigned int:5	file:
cs	arch/i386/gdt.c	/^  unsigned int cs : 16;         \/\/ code segment selector$/;"	m	struct:gatedesc	typeref:typename:unsigned int:16	file:
cs	arch/i386/gdt.c	/^  unsigned short cs;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
dpl	arch/i386/gdt.c	/^  unsigned int dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc	typeref:typename:unsigned int:2	file:
ds	arch/i386/gdt.c	/^  unsigned short ds;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
eax	arch/i386/gdt.c	/^  unsigned int eax;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
ebp	arch/i386/gdt.c	/^  unsigned int ebp;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
ebx	arch/i386/gdt.c	/^  unsigned int ebx;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
ecx	arch/i386/gdt.c	/^  unsigned int ecx;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
edi	arch/i386/gdt.c	/^  unsigned int edi;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
edx	arch/i386/gdt.c	/^  unsigned int edx;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
eflags	arch/i386/gdt.c	/^  unsigned int eflags;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
eip	arch/i386/gdt.c	/^  unsigned int eip;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
err	arch/i386/gdt.c	/^  unsigned int err;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
es	arch/i386/gdt.c	/^  unsigned short es;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
esi	arch/i386/gdt.c	/^  unsigned int esi;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
esp	arch/i386/gdt.c	/^  unsigned int esp;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
fs	arch/i386/gdt.c	/^  unsigned short fs;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
gatedesc	arch/i386/gdt.c	/^struct gatedesc {$/;"	s	file:
gdt	arch/i386/boot.asm	/^gdt:$/;"	l
gdt_code	arch/i386/boot.asm	/^    gdt_code:$/;"	l
gdt_data	arch/i386/boot.asm	/^    gdt_data:$/;"	l
gdt_desc	arch/i386/boot.asm	/^gdt_desc:$/;"	l
gdt_end	arch/i386/boot.asm	/^    gdt_end:$/;"	l
gdt_null	arch/i386/boot.asm	/^    gdt_null:$/;"	l
gs	arch/i386/gdt.c	/^  unsigned short gs;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
hang	arch/i386/boot.asm	/^.hang:  hlt$/;"	l
idt	arch/i386/gdt.c	/^struct gatedesc idt[256];$/;"	v	typeref:struct:gatedesc[256]
idtinit	arch/i386/gdt.c	/^idtinit(void)$/;"	f	typeref:typename:void
interrupt_dispatch	arch/i386/gdt.c	/^interrupt_dispatch(struct trapframe *tf)$/;"	f	typeref:typename:void
interrupt_stub	arch/i386/idt.asm	/^interrupt_stub:$/;"	l
kernel_main	kernel/main.c	/^void kernel_main(void) {$/;"	f	typeref:typename:void
lidt	arch/i386/gdt.c	/^lidt(struct gatedesc *p, int size)$/;"	f	typeref:typename:void	file:
load_gdt	arch/i386/boot.asm	/^load_gdt:$/;"	l
memcmp	lib/string/memcmp.c	/^int memcmp(const void* aptr, const void* bptr, size_t size) {$/;"	f	typeref:typename:int
memcpy	lib/string/memcpy.c	/^void* memcpy(void* restrict dstptr, const void* restrict srcptr, size_t size) {$/;"	f	typeref:typename:void *
memmove	lib/string/memmove.c	/^void* memmove(void* dstptr, const void* srcptr, size_t size) {$/;"	f	typeref:typename:void *
memset	lib/string/memset.c	/^void* memset(void* bufptr, int value, size_t size) {$/;"	f	typeref:typename:void *
oesp	arch/i386/gdt.c	/^  unsigned int oesp;      \/\/ useless & ignored$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
off_15_0	arch/i386/gdt.c	/^  unsigned int off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc	typeref:typename:unsigned int:16	file:
off_31_16	arch/i386/gdt.c	/^  unsigned int off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:gatedesc	typeref:typename:unsigned int:16	file:
p	arch/i386/gdt.c	/^  unsigned int p : 1;           \/\/ Present$/;"	m	struct:gatedesc	typeref:typename:unsigned int:1	file:
padding1	arch/i386/gdt.c	/^  unsigned short padding1;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
padding2	arch/i386/gdt.c	/^  unsigned short padding2;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
padding3	arch/i386/gdt.c	/^  unsigned short padding3;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
padding4	arch/i386/gdt.c	/^  unsigned short padding4;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
padding5	arch/i386/gdt.c	/^  unsigned short padding5;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
padding6	arch/i386/gdt.c	/^  unsigned short padding6;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
pop	arch/i386/idt.asm	/^    pop ds$/;"	d
print	lib/stdio/printf.c	/^static bool print(const char* data, size_t length) {$/;"	f	typeref:typename:bool	file:
printf	lib/stdio/printf.c	/^int printf(const char* restrict format, ...) {$/;"	f	typeref:typename:int
push	arch/i386/idt.asm	/^    push ds$/;"	d
putchar	lib/stdio/putchar.c	/^int putchar(int ic) {$/;"	f	typeref:typename:int
puts	lib/stdio/puts.c	/^int puts(const char* string) {$/;"	f	typeref:typename:int
resb	arch/i386/boot.asm	/^resb 16384 ; 16 KiB$/;"	l
rsv1	arch/i386/gdt.c	/^  unsigned int rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc	typeref:typename:unsigned int:3	file:
s	arch/i386/gdt.c	/^  unsigned int s : 1;           \/\/ must be 0 (system)$/;"	m	struct:gatedesc	typeref:typename:unsigned int:1	file:
ss	arch/i386/gdt.c	/^  unsigned short ss;$/;"	m	struct:trapframe	typeref:typename:unsigned short	file:
stack_bottom	arch/i386/boot.asm	/^stack_bottom:$/;"	l
stack_top	arch/i386/boot.asm	/^stack_top:$/;"	l
strlen	lib/string/strlen.c	/^size_t strlen(const char* str) {$/;"	f	typeref:typename:size_t
terminal_buffer	arch/i386/tty.c	/^static uint16_t* terminal_buffer;$/;"	v	typeref:typename:uint16_t *	file:
terminal_color	arch/i386/tty.c	/^static uint8_t terminal_color;$/;"	v	typeref:typename:uint8_t	file:
terminal_column	arch/i386/tty.c	/^static size_t terminal_column;$/;"	v	typeref:typename:size_t	file:
terminal_initialize	arch/i386/tty.c	/^void terminal_initialize(void) {$/;"	f	typeref:typename:void
terminal_putchar	arch/i386/tty.c	/^void terminal_putchar(char c) {$/;"	f	typeref:typename:void
terminal_putentryat	arch/i386/tty.c	/^void terminal_putentryat(unsigned char c, uint8_t color, size_t x, size_t y) {$/;"	f	typeref:typename:void
terminal_row	arch/i386/tty.c	/^static size_t terminal_row;$/;"	v	typeref:typename:size_t	file:
terminal_setcolor	arch/i386/tty.c	/^void terminal_setcolor(uint8_t color) {$/;"	f	typeref:typename:void
terminal_write	arch/i386/tty.c	/^void terminal_write(const char* data, size_t size) {$/;"	f	typeref:typename:void
terminal_writestring	arch/i386/tty.c	/^void terminal_writestring(const char* data) {$/;"	f	typeref:typename:void
trapframe	arch/i386/gdt.c	/^struct trapframe {$/;"	s	file:
trapno	arch/i386/gdt.c	/^  unsigned int trapno;$/;"	m	struct:trapframe	typeref:typename:unsigned int	file:
type	arch/i386/gdt.c	/^  unsigned int type : 4;        \/\/ type(STS_{IG32,TG32})$/;"	m	struct:gatedesc	typeref:typename:unsigned int:4	file:
vga_color	arch/i386/vga.h	/^enum vga_color {$/;"	g
vga_entry	arch/i386/vga.h	/^static inline uint16_t vga_entry(unsigned char uc, uint8_t color) {$/;"	f	typeref:typename:uint16_t
vga_entry_color	arch/i386/vga.h	/^static inline uint8_t vga_entry_color(enum vga_color fg, enum vga_color bg) {$/;"	f	typeref:typename:uint8_t
