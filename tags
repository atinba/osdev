!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!LdScript	assignment	/how a value is assigned to the symbol/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!LdScript	S,section	/sections/
!_TAG_KIND_DESCRIPTION!LdScript	i,inputSection	/input sections/
!_TAG_KIND_DESCRIPTION!LdScript	s,symbol	/symbols/
!_TAG_KIND_DESCRIPTION!LdScript	v,version	/versions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!LdScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/atin/osdev/myos/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Asm!section	placement	/placement where the assembled code goes/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	discarded	/discarded when linking/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	mapped	/mapped to output section/
!_TAG_ROLE_DESCRIPTION!LdScript!symbol	entrypoint	/entry points/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(ARCHDIR)/crtbegin.o	Makefile	/^$(ARCHDIR)\/crtbegin.o $(ARCHDIR)\/crtend.o:$/;"	t
$(ARCHDIR)/crtend.o	Makefile	/^$(ARCHDIR)\/crtbegin.o $(ARCHDIR)\/crtend.o:$/;"	t
$(OS)	Makefile	/^$(OS): lib $(KOBJS) $(ARCHDIR)\/linker.ld$/;"	t
%.libc.S	Makefile	/^%.libc.S: %.c$/;"	t
%.libc.o	Makefile	/^%.libc.o: %.c$/;"	t
%.libk.o	Makefile	/^%.libk.o: %.S$/;"	t
%.libk.o	Makefile	/^%.libk.o: %.c$/;"	t
%.o	Makefile	/^%.o: %.c$/;"	t
%.o	Makefile	/^%.o: %.s$/;"	t
ALIGN	arch/i386/boot.s	/^.set ALIGN,    1<<0             # align loaded modules on page boundaries$/;"	d
AR	Makefile	/^AR:=$(HOST)-ar$/;"	m
ARCHDIR	Makefile	/^ARCHDIR:=arch\/$(HOSTARCH)$/;"	m
ARCH_I386_VGA_H	arch/i386/vga.h	/^#define ARCH_I386_VGA_H$/;"	d
ARCH_OBJS	Makefile	/^ARCH_OBJS := $(addprefix $(ARCHDIR)\/,$(KERNEL_ARCH_OBJS))$/;"	m
AS	Makefile	/^AS:=$(HOST)-as$/;"	m
CC	Makefile	/^CC:=$(HOST)-gcc$/;"	m
CC_CF	Makefile	/^CC_CF:=$(CC) $(CFLAGS) -std=gnu11$/;"	m
CFLAGS	Makefile	/^CFLAGS:=$(DEFAULT_FLAGS)  $(INC_FLAGS)$/;"	m
CHECKSUM	arch/i386/boot.s	/^.set CHECKSUM, -(MAGIC + FLAGS) # checksum of above, to prove we are multiboot$/;"	d
DEBUG_MACRO	Makefile	/^DEBUG_MACRO:=#TODO$/;"	m
DEFAULT_FLAGS	Makefile	/^DEFAULT_FLAGS:=-g -ffreestanding -O2$/;"	m
EOF	include/stdio.h	/^#define EOF /;"	d
EXTRA_FLAGS	Makefile	/^EXTRA_FLAGS:=-fstack-protector-all$/;"	m
FLAGS	arch/i386/boot.s	/^.set FLAGS,    ALIGN | MEMINFO  # this is the Multiboot 'flag' field$/;"	d
HOST	Makefile	/^HOST:=i686-elf$/;"	m
HOSTARCH	Makefile	/^HOSTARCH:=i386$/;"	m
INC_FLAGS	Makefile	/^INC_FLAGS:=-Iinclude$/;"	m
KERNEL_ARCH_OBJS	arch/i386/build.mk	/^KERNEL_ARCH_OBJS=\\$/;"	m
KERN_MACRO	Makefile	/^KERN_MACRO:=-D__is_kernel$/;"	m
KOBJS	Makefile	/^KOBJS=$(ARCH_OBJS) kernel\/main.o$/;"	m
LIBC_MACRO	Makefile	/^LIBC_MACRO:=-D__is_libc$/;"	m
LIBC_OBJS	Makefile	/^LIBC_OBJS=$(LIB_SRC:.c=.libc.o)$/;"	m
LIBK_MACRO	Makefile	/^LIBK_MACRO:=-D__is_libk$/;"	m
LIBK_OBJS	Makefile	/^LIBK_OBJS=$(LIB_SRC:.c=.libk.o)$/;"	m
LIB_BIN	Makefile	/^LIB_BIN:=lib\/libk.a # libc.a$/;"	m
LIB_FLAGS	Makefile	/^LIB_FLAGS:=-Llib -nostdlib -lk -lgcc$/;"	m
LIB_SRC	Makefile	/^LIB_SRC := $(wildcard lib\/**\/*.c)$/;"	m
MAGIC	arch/i386/boot.s	/^.set MAGIC,    0x1BADB002       # 'magic number' lets bootloader find the header$/;"	d
MEMINFO	arch/i386/boot.s	/^.set MEMINFO,  1<<1             # provide memory map$/;"	d
OS	Makefile	/^OS:=myos.bin$/;"	m
RELEASE_FLAGS	Makefile	/^RELEASE_FLAGS:=-O2 # TODO: release$/;"	m
Timeline	readme.md	/^## Timeline$/;"	s
Todos	readme.md	/^## Todos$/;"	s
VGA_COLOR_BLACK	arch/i386/vga.h	/^	VGA_COLOR_BLACK = 0,$/;"	e	enum:vga_color
VGA_COLOR_BLUE	arch/i386/vga.h	/^	VGA_COLOR_BLUE = 1,$/;"	e	enum:vga_color
VGA_COLOR_BROWN	arch/i386/vga.h	/^	VGA_COLOR_BROWN = 6,$/;"	e	enum:vga_color
VGA_COLOR_CYAN	arch/i386/vga.h	/^	VGA_COLOR_CYAN = 3,$/;"	e	enum:vga_color
VGA_COLOR_DARK_GREY	arch/i386/vga.h	/^	VGA_COLOR_DARK_GREY = 8,$/;"	e	enum:vga_color
VGA_COLOR_GREEN	arch/i386/vga.h	/^	VGA_COLOR_GREEN = 2,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_BLUE	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_BLUE = 9,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_BROWN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_BROWN = 14,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_CYAN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_CYAN = 11,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_GREEN	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_GREEN = 10,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_GREY	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_GREY = 7,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_MAGENTA	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_MAGENTA = 13,$/;"	e	enum:vga_color
VGA_COLOR_LIGHT_RED	arch/i386/vga.h	/^	VGA_COLOR_LIGHT_RED = 12,$/;"	e	enum:vga_color
VGA_COLOR_MAGENTA	arch/i386/vga.h	/^	VGA_COLOR_MAGENTA = 5,$/;"	e	enum:vga_color
VGA_COLOR_RED	arch/i386/vga.h	/^	VGA_COLOR_RED = 4,$/;"	e	enum:vga_color
VGA_COLOR_WHITE	arch/i386/vga.h	/^	VGA_COLOR_WHITE = 15,$/;"	e	enum:vga_color
VGA_HEIGHT	arch/i386/tty.c	/^static const size_t VGA_HEIGHT = 25;$/;"	v	typeref:typename:const size_t	file:
VGA_MEMORY	arch/i386/tty.c	/^static uint16_t* const VGA_MEMORY = (uint16_t*) 0xB8000;$/;"	v	typeref:typename:uint16_t * const	file:
VGA_WIDTH	arch/i386/tty.c	/^static const size_t VGA_WIDTH = 80;$/;"	v	typeref:typename:const size_t	file:
WARN_FLAGS	Makefile	/^WARN_FLAGS:= -Wall -Wextra -pedantic -Wshadow -Wpointer-arith -Wcast-align \\$/;"	m
_KERNEL_TTY_H	include/kernel/tty.h	/^#define _KERNEL_TTY_H$/;"	d
_STDIO_H	include/stdio.h	/^#define _STDIO_H /;"	d
_STDLIB_H	include/stdlib.h	/^#define _STDLIB_H /;"	d
_STRING_H	include/string.h	/^#define _STRING_H /;"	d
_SYS_CDEFS_H	include/sys/cdefs.h	/^#define _SYS_CDEFS_H /;"	d
__myos_libc	include/sys/cdefs.h	/^#define __myos_libc /;"	d
_fini	arch/i386/crti.s	/^_fini:$/;"	l
_init	arch/i386/crti.s	/^_init:$/;"	l
_start	arch/i386/boot.s	/^_start:$/;"	l
abort	lib/stdlib/abort.c	/^void abort(void) {$/;"	f	typeref:typename:void
all	Makefile	/^all: ctags $(OS)$/;"	t
clean	Makefile	/^clean:$/;"	t
ctags	Makefile	/^ctags:$/;"	t
kernel_main	kernel/main.c	/^void kernel_main(void) {$/;"	f	typeref:typename:void
lib	Makefile	/^lib: $(LIB_BIN)$/;"	t
lib/libk.a	Makefile	/^lib\/libk.a: $(LIBK_OBJS)$/;"	t
libc.a	Makefile	/^libc.a: $(LIBC_OBJS)$/;"	t
memcmp	lib/string/memcmp.c	/^int memcmp(const void* aptr, const void* bptr, size_t size) {$/;"	f	typeref:typename:int
memcpy	lib/string/memcpy.c	/^void* memcpy(void* restrict dstptr, const void* restrict srcptr, size_t size) {$/;"	f	typeref:typename:void *
memmove	lib/string/memmove.c	/^void* memmove(void* dstptr, const void* srcptr, size_t size) {$/;"	f	typeref:typename:void *
memset	lib/string/memset.c	/^void* memset(void* bufptr, int value, size_t size) {$/;"	f	typeref:typename:void *
print	lib/stdio/printf.c	/^static bool print(const char* data, size_t length) {$/;"	f	typeref:typename:bool	file:
printf	lib/stdio/printf.c	/^int printf(const char* restrict format, ...) {$/;"	f	typeref:typename:int
putchar	lib/stdio/putchar.c	/^int putchar(int ic) {$/;"	f	typeref:typename:int
puts	lib/stdio/puts.c	/^int puts(const char* string) {$/;"	f	typeref:typename:int
qemu	Makefile	/^qemu: $(OS)$/;"	t
re	Makefile	/^re:$/;"	t
stack_bottom	arch/i386/boot.s	/^stack_bottom:$/;"	l
stack_top	arch/i386/boot.s	/^stack_top:$/;"	l
strlen	lib/string/strlen.c	/^size_t strlen(const char* str) {$/;"	f	typeref:typename:size_t
terminal_buffer	arch/i386/tty.c	/^static uint16_t* terminal_buffer;$/;"	v	typeref:typename:uint16_t *	file:
terminal_color	arch/i386/tty.c	/^static uint8_t terminal_color;$/;"	v	typeref:typename:uint8_t	file:
terminal_column	arch/i386/tty.c	/^static size_t terminal_column;$/;"	v	typeref:typename:size_t	file:
terminal_initialize	arch/i386/tty.c	/^void terminal_initialize(void) {$/;"	f	typeref:typename:void
terminal_putchar	arch/i386/tty.c	/^void terminal_putchar(char c) {$/;"	f	typeref:typename:void
terminal_putentryat	arch/i386/tty.c	/^void terminal_putentryat(unsigned char c, uint8_t color, size_t x, size_t y) {$/;"	f	typeref:typename:void
terminal_row	arch/i386/tty.c	/^static size_t terminal_row;$/;"	v	typeref:typename:size_t	file:
terminal_setcolor	arch/i386/tty.c	/^void terminal_setcolor(uint8_t color) {$/;"	f	typeref:typename:void
terminal_write	arch/i386/tty.c	/^void terminal_write(const char* data, size_t size) {$/;"	f	typeref:typename:void
terminal_writestring	arch/i386/tty.c	/^void terminal_writestring(const char* data) {$/;"	f	typeref:typename:void
todolist	Makefile	/^todolist:$/;"	t
vga_color	arch/i386/vga.h	/^enum vga_color {$/;"	g
vga_entry	arch/i386/vga.h	/^static inline uint16_t vga_entry(unsigned char uc, uint8_t color) {$/;"	f	typeref:typename:uint16_t
vga_entry_color	arch/i386/vga.h	/^static inline uint8_t vga_entry_color(enum vga_color fg, enum vga_color bg) {$/;"	f	typeref:typename:uint8_t
